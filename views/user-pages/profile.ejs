<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>My Profile | TechCart</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body>
  <!-- Header and Sidebar -->
  <%- include('partials/header') %>
  <%- include('partials/accountSidebar') %>

  <!-- Profile Content Wrapper -->
  <div class="content-wrapper">
    <div class="container-fluid">
      <h3 class="mb-4">Welcome! <%= user.firstName || "Customer Name" %></h3>

      <!-- User Details Card -->
      <div class="card p-4 shadow-sm">
        <h5 class="mb-4">Your Details</h5>
        <form id="updatePasswordForm" method="POST" action="/account/updatePassword">
          <div class="row mb-3">
            <div class="mb-3">
              <label for="firstName" class="form-label">First Name</label>
              <input type="text" class="form-control" id="firstName" name="firstName" value="<%= user.firstName || '' %>" readonly />
            </div>
          </div>

          <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <input type="email" class="form-control" id="email" name="email" value="<%= user.email || '' %>" readonly />
          </div>

          <div class="mb-3">
            <label for="phone" class="form-label">Phone</label>
            <input type="text" class="form-control" id="phone" name="phone" value="<%= user.phone || '' %>" readonly />
          </div>

          <a href="/account/edit" class="btn btn-dark w-100 mb-3">Edit Details</a>

          <hr />

          <!-- Password Change Section -->
          <h5 class="mb-3">Change Password</h5>

          <div class="mb-3">
            <label for="currentPassword" class="form-label">Current Password</label>
            <input type="password" class="form-control" id="currentPassword" name="currentPassword" placeholder="Enter current password" required />
          </div>

          <div class="mb-3">
            <label for="newPassword" class="form-label">New Password</label>
            <input type="password" class="form-control" id="newPassword" name="newPassword" placeholder="Enter new password" required />
            <small id="passwordHelp" class="form-text text-muted">
              Password must be at least 8 characters, contain uppercase and lowercase letters, a number, and a special character.
            </small>
          </div>

          <div class="mb-3">
            <label for="confirmPassword" class="form-label">Confirm New Password</label>
            <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" placeholder="Confirm new password" required />
          </div>

          <button type="submit" class="btn btn-dark w-100">Update</button>
        </form>
      </div>
    </div>
  </div>

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

  <!-- Password Update Form Handling -->
  <script>
    document.getElementById("updatePasswordForm").addEventListener("submit", async function (e) {
      e.preventDefault(); // Prevent default form submission

      const currentPassword = document.getElementById("currentPassword").value;
      const newPassword = document.getElementById("newPassword").value;
      const confirmPassword = document.getElementById("confirmPassword").value;
      const firstName = document.getElementById("firstName").value;
      const email = document.getElementById("email").value;
      const phone = document.getElementById("phone").value;

      // Regular expression for password validation
      const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*()_+={}\[\]|;:'",<>\./?`~\\\-]).{8,}$/;

      // Client-side validation
      if (!currentPassword || !newPassword || !confirmPassword) {
        Swal.fire({
          icon: "error",
          title: "Validation Error",
          text: "All fields are required!",
        });
        return;
      }

      if (newPassword !== confirmPassword) {
        Swal.fire({
          icon: "error",
          title: "Password Mismatch",
          text: "New password and confirmation do not match!",
        });
        return;
      }

      if (!passwordRegex.test(newPassword)) {
        Swal.fire({
          icon: "error",
          title: "Weak Password",
          text: "Password should be at least 8 characters long, with a mix of uppercase, lowercase, numbers, and special characters!",
        });
        return;
      }

      // Prepare form data
      const formData = {
        firstName,
        email,
        phone,
        currentPassword,
        newPassword,
        confirmPassword,
      };

      try {
        const response = await fetch("/account/updatePassword", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(formData),
        });

        const result = await response.json();

        if (response.status === 200) {
          Swal.fire({
            icon: "success",
            title: "Success",
            text: result.message, // "Password updated successfully!"
            confirmButtonText: "OK",
          }).then(() => {
            // Optionally reset the form
            document.getElementById("updatePasswordForm").reset();
          });
        } else {
          Swal.fire({
            icon: "error",
            title: "Error",
            text: result.message, // Handles all error messages from backend
          });
        }
      } catch (error) {
        Swal.fire({
          icon: "error",
          title: "Server Error",
          text: "An error occurred while updating the password. Please try again later.",
        });
      }
    });
  </script>
</body>

</html>