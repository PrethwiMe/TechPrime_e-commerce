<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Checkout | TechCart</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
  <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.9.3/dist/confetti.browser.min.js"></script>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <style>
    body { background-color: #121212; color: #f1f1f1; }
    .card { background: #fff; color: #000; border-radius: 10px; transition: 0.3s; }
    .card:hover { background-color: #f1f1f1; }
    .btn-success { background-color: #28a745; border: none; }
    .btn-success:hover { background-color: #218838; }
    .text-strike { text-decoration: line-through; color: #888; font-size: 0.9rem; }
    .coupon-table {
      width: 100%;
      border-collapse: collapse;
      background: #fff;
    }
    .coupon-table thead {
      background: #6366f1;
    }
    .coupon-table thead th {
      color: white;
      font-weight: 600;
      text-transform: uppercase;
      font-size: 0.875rem;
      padding: 1rem;
      border: 1px solid #374151;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    }
    .coupon-table tbody td {
      padding: 1rem;
      color: #1f2937;
      font-weight: 500;
      border: 1px solid #374151;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    }
  </style>
</head>
<body>

  <%- include('partials/header') %>

  <div class="container py-4">
    <div class="row">
      <!-- Left: Cart -->
      <div class="col-lg-7 mb-4">
        <div class="card shadow-sm mb-4">
          <div class="card-header bg-dark text-white">
            <i class="bi bi-cart-fill me-2"></i> Your Cart
          </div>
          <ul class="list-group list-group-flush" id="cartItems">
            <% if (cartItems && cartItems.length > 0) { %>
              <% cartItems.forEach(item => { %>
                <li class="list-group-item d-flex justify-content-between align-items-start" data-item-id="<%= item.product?._id || item.productId %>">
                  <div class="d-flex">
                    <img src="<%= item.product?.images?.[0] || '/images/default-product.png' %>" 
                         class="img-thumbnail me-3" style="width:100px; height:100px; object-fit:cover;">
                    <div>
                      <strong><%= item.product?.name || 'Unknown Product' %></strong><br>
                      <small><%= item.variant?.processor %>, <%= item.variant?.ram %>, <%= item.variant?.storage %></small><br>
                      <small>Color: <%= item.variant?.color %></small>
                    </div>
                  </div>
                  <div class="text-end">
                    <% if (item.appliedOffer && item.discountedPrice) { %>
                      <span class="text-strike">â‚¹<%= item.variant?.price?.toFixed(2) %></span><br>
                      <span class="text-success">â‚¹<%= item.discountedPrice.toFixed(2) %></span><br>
                    <% } else { %>
                      <span>â‚¹<%= item.variant?.price?.toFixed(2) %></span><br>
                    <% } %>
                    <small>Qty: <%= item.quantity %></small><br>
                    <strong>â‚¹<%= ((item.appliedOffer ? item.discountedPrice : item.variant?.price) * item.quantity).toFixed(2) %></strong>
                  </div>
                </li>
              <% }) %>
            <% } else { %>
              <li class="list-group-item">Your cart is empty.</li>
            <% } %>
          </ul>
        </div>

        <!-- Order Summary -->
        <div class="card shadow-sm">
          <div class="card-header bg-dark text-white">
            <i class="bi bi-receipt-cutoff me-2"></i> Order Summary
          </div>
          <div class="card-body">
            <p class="d-flex justify-content-between"><span>Subtotal:</span> <span id="subtotal">â‚¹<%= subtotal.toFixed(2) %></span></p>
            <p class="d-flex justify-content-between text-success" id="discountRow" style="display: none;">
              <span>Discount:</span> 
              <span id="discountAmount">â‚¹0.00</span>
            </p>
            <p class="d-flex justify-content-between"><span>Tax:</span> <span id="tax">â‚¹<%= tax.toFixed(2) %></span></p>
            <p class="d-flex justify-content-between"><span>Delivery:</span> <span id="deliveryCharge">â‚¹<%= deliveryCharge.toFixed(2) %></span></p>
            <hr>
            <h5 class="d-flex justify-content-between">
              <span>Total:</span> 
              <span class="text-success" id="total">â‚¹<%= total.toFixed(2) %></span>
            </h5>
            <div class="mt-3">
              <input type="text" id="couponCode" class="form-control mb-2" placeholder="Enter coupon code">
              <div class="d-flex gap-2 mb-2">
                <button class="btn btn-outline-primary w-50" id="applyCouponBtn">
                  <i class="bi bi-ticket-perforated-fill me-1"></i> Apply Coupon
                </button>
                <button class="btn btn-outline-secondary w-50" id="viewCouponsBtn" data-bs-toggle="modal" data-bs-target="#viewCouponsModal">
                  <i class="bi bi-ticket-fill me-1"></i> View Coupons
                </button>
              </div>
              <button class="btn btn-danger w-100" id="placeOrderBtn">
                <i class="bi bi-bag-check-fill me-1"></i> Place Order
              </button>
            </div>
          </div>
        </div>
      </div>

      <!-- Right: Address + Payment -->
      <div class="col-lg-5 mb-4">
        <div class="card shadow-sm">
          <div class="card-header bg-secondary text-white d-flex justify-content-between align-items-center">
            <span><i class="bi bi-geo-alt-fill me-2"></i> Delivery Address</span>
            <button class="btn btn-sm btn-light" data-bs-toggle="modal" data-bs-target="#addAddressModal">+ Add Address</button>
          </div>
          <div class="card-body" id="userAddresses" data-addresses='<%- JSON.stringify(addresses || []) %>'>
            <% if (addresses && addresses.length > 0) { %>
              <% addresses.forEach((address, idx) => { %>
                <div class="form-check mb-3">
                  <input class="form-check-input" type="radio" 
                         name="selectedAddress" id="address<%= idx %>" 
                         value='<%- JSON.stringify(address) %>' <%= idx===0 ? "checked" : "" %>>
                  <label class="form-check-label" for="address<%= idx %>">
                    <strong><%= address.fullName %></strong><br>
                    <%= address.line1 %>, <%= address.city %>, <%= address.state %> - <%= address.pincode %><br>
                    Phone: <%= address.phone %>
                  </label>
                </div>
              <% }) %>
            <% } else { %>
              <p class="text-muted">No addresses available. Please add one.</p>
            <% } %>
          </div>
        </div>

        <!-- Payment Methods -->
        <div class="card shadow-sm mt-4">
          <div class="card-header bg-secondary text-white">
            <i class="bi bi-credit-card-fill me-2"></i> Payment Methods
          </div>
          <div class="card-body d-flex justify-content-around">
            <div class="form-check text-center">
              <input class="form-check-input" type="radio" name="paymentMethod" id="cod" value="cod" checked>
              <label class="form-check-label d-block" for="cod">
                <i class="bi bi-cash-coin" style="font-size: 2.5rem; color: #28a745;"></i><br>
                Cash on Delivery
              </label>
            </div>
            <div class="form-check text-center">
              <input class="form-check-input" type="radio" name="paymentMethod" id="online" value="online">
              <label class="form-check-label d-block" for="online">
                <i class="bi bi-credit-card" style="font-size: 2.5rem; color: #0d6efd;"></i><br>
                Online Payment
              </label>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Order Success Modal -->
  <div class="modal fade" id="orderSuccessModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
      <div class="modal-content text-center">
        <div class="modal-header bg-secondary text-white">
          <h5 class="modal-title">Order Success</h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body p-4">
          <h3 class="text-success mb-3">ðŸŽ‰ Order Placed Successfully!</h3>
          <p>Your order has been confirmed. Thank you for shopping with TechCart!</p>
          <div class="d-flex justify-content-center gap-3 mt-3">
            <a href="/" class="btn btn-light"><i class="bi bi-house-door-fill me-2"></i> Home</a>
            <a href="/account/orders" class="btn btn-primary"><i class="bi bi-bag-check-fill me-2"></i> My Orders</a>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Add Address Modal -->
  <div class="modal fade" id="addAddressModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <form id="addAddressForm">
          <div class="modal-header">
            <h5 class="modal-title">Add New Address</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
          </div>
          <div class="modal-body">
            <div class="mb-3"><label class="form-label">Full Name</label><input type="text" class="form-control" name="fullName" required /></div>
            <div class="mb-3"><label class="form-label">Phone</label><input type="text" class="form-control" name="phone" required /></div>
            <div class="mb-3"><label class="form-label">Address Line 1</label><input type="text" class="form-control" name="line1" required /></div>
            <div class="mb-3"><label class="form-label">City</label><input type="text" class="form-control" name="city" required /></div>
            <div class="mb-3"><label class="form-label">State</label><input type="text" class="form-control" name="state" required /></div>
            <div class="mb-3"><label class="form-label">Pincode</label><input type="text" class="form-control" name="pincode" required /></div>
          </div>
          <div class="modal-footer">
            <button type="submit" class="btn btn-primary">Add Address</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- View Coupons Modal -->
  <div class="modal fade" id="viewCouponsModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
      <div class="modal-content">
        <div class="modal-header bg-dark text-white">
          <h5 class="modal-title"><i class="bi bi-ticket-fill me-2"></i> Available Coupons</h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <table class="coupon-table">
            <thead>
              <tr>
                <th>Code</th>
                <th>Discount</th>
                <th>Valid Until</th>
                <th>Min Purchase</th>
              </tr>
            </thead>
            <tbody id="couponTableBody">
              <% if (coupon && Array.isArray(coupon) && coupon.length > 0) { %>
                <% coupon.forEach(c => { %>
                  <tr>
                    <td><%= c.code %></td>
                    <td><%= c.discount %>%</td>
                    <td><%= c.validUntil ? new Date(c.validUntil).toISOString().split('T')[0] : 'No Expiry' %></td>
                    <td>â‚¹<%= c.minimumPurchase.toFixed(2) %></td>
                  </tr>
                <% }) %>
              <% } else { %>
                <tr><td colspan="4" class="text-center">No coupons available.</td></tr>
              <% } %>
            </tbody>
          </table>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <script>
    let cartItems = <%- JSON.stringify(cartItems || []) %>.map(ci => ({
      productId: ci.product?._id || ci.productId,
      variantId: ci.variant?._id || ci.variantId,
      quantity: ci.quantity,
      price: ci.variant?.price || ci.price,
      originalPrice: ci.variant?.price || ci.price,
      product: ci.product,
      variant: ci.variant,
      appliedOffer: ci.appliedOffer || false,
      discountedPrice: ci.discountedPrice || ci.variant?.price || ci.price
    }));

    // Apply Coupon
    document.getElementById("applyCouponBtn").addEventListener("click", async () => {
      const code = document.getElementById("couponCode").value.trim();
      if (!code) {
        Swal.fire("Enter coupon", "Please enter a coupon code.", "info");
        return;
      }

      try {
        const response = await axios.post("/checkout/apply-coupon", {
          code,
          subtotal: <%= subtotal %>,
          items: cartItems
        });

        if (response.data.success) {
          // Update cart items with discounted prices
          cartItems = response.data.updatedItems.map(item => ({
            ...item,
            price: item.discountedPrice || item.originalPrice,
            appliedOffer: !!item.discountedPrice,
            discountedPrice: item.discountedPrice || item.originalPrice
          }));

          const cartList = document.getElementById("cartItems");
          cartList.innerHTML = '';

          cartItems.forEach(item => {
            const li = document.createElement("li");
            li.className = "list-group-item d-flex justify-content-between align-items-start";
            li.dataset.itemId = item.productId;
            li.innerHTML = `
              <div class="d-flex">
                <img src="${item.product?.images?.[0] || '/images/default-product.png'}" 
                     class="img-thumbnail me-3" style="width:100px; height:100px; object-fit:cover;">
                <div>
                  <strong>${item.product?.name || 'Unknown Product'}</strong><br>
                  <small>${item.variant?.processor}, ${item.variant?.ram}, ${item.variant?.storage}</small><br>
                  <small>Color: ${item.variant?.color}</small>
                </div>
              </div>
              <div class="text-end">
                ${item.appliedOffer ? `
                  <span class="text-strike">â‚¹${item.originalPrice.toFixed(2)}</span><br>
                  <span class="text-success">â‚¹${item.discountedPrice.toFixed(2)}</span><br>
                ` : `
                  <span>â‚¹${item.originalPrice.toFixed(2)}</span><br>
                `}
                <small>Qty: ${item.quantity}</small><br>
                <strong>â‚¹${(item.discountedPrice * item.quantity).toFixed(2)}</strong>
              </div>
            `;
            cartList.appendChild(li);
          });

          // Update order summary
          document.getElementById("subtotal").textContent = `â‚¹<%= subtotal.toFixed(2) %>`;
          document.getElementById("discountRow").style.display = 'flex';
          document.getElementById("discountAmount").textContent = `-â‚¹${response.data.discount.toFixed(2)}`;
          document.getElementById("tax").textContent = `â‚¹<%= tax.toFixed(2) %>`;
          document.getElementById("deliveryCharge").textContent = `â‚¹<%= deliveryCharge.toFixed(2) %>`;
          document.getElementById("total").textContent = `â‚¹${response.data.discountedTotal.toFixed(2)}`;

          Swal.fire("Success", response.data.message, "success");
        } else {
          Swal.fire("Error", response.data.message, "error");
        }
      } catch (error) {
        Swal.fire("Error", error.response?.data?.message || "Failed to apply coupon", "error");
      }
    });

    // Place Order
    document.getElementById("placeOrderBtn").addEventListener("click", async () => {
      const selectedAddressRaw = document.querySelector('input[name="selectedAddress"]:checked')?.value;
      const selectedPayment = document.querySelector('input[name="paymentMethod"]:checked')?.value;

      if (!selectedAddressRaw) {
        Swal.fire("No address selected", "Please select a delivery address.", "warning");
        return;
      }
      if (!selectedPayment) {
        Swal.fire("No payment method", "Please choose a payment method.", "warning");
        return;
      }

      const selectedAddress = JSON.parse(selectedAddressRaw);
      const orderPayload = {
        selectedAddress,
        paymentMethod: selectedPayment,
        items: cartItems,
        subtotal: "<%= subtotal.toFixed(2) %>",
        tax: "<%= tax.toFixed(2) %>",
        deliveryCharge: "<%= deliveryCharge.toFixed(2) %>",
        total: document.getElementById("total").textContent.replace("â‚¹", ""),
        couponCode: document.getElementById("couponCode").value.trim()
      };

      if (selectedPayment === "cod") {
        try {
          const res = await axios.post("/cart/checkout/order", orderPayload);
          if (res.data.status === "success") {
            new bootstrap.Modal(document.getElementById("orderSuccessModal")).show();
            confetti({ particleCount: 200, spread: 120, origin: { y: 0.6 } });
          } else {
            Swal.fire("Error", res.data.message || "Order failed", "error");
          }
        } catch {
          Swal.fire("Error", "Something went wrong. Try again.", "error");
        }
      } else {
        try {
          const orderRes = await axios.post("/create-order", { amount: parseFloat(document.getElementById("total").textContent.replace("â‚¹", "")) * 100 });
          const { id: orderId, amount, currency, orderId: dbOrderId } = orderRes.data;

          const options = {
            key: "<%= process.env.RAZORPAY_KEY_ID %>",
            amount: amount,
            currency,
            order_id: orderId,
            name: "TechCart",
            description: "Order Payment",
            handler: async function (response) {
              try {
                const confirm = await axios.post("/order/verifyPayment", {
                  ...orderPayload,
                  paymentMethod: "online",
                  razorpayPaymentId: response.razorpay_payment_id,
                  razorpayOrderId: response.razorpay_order_id,
                  razorpaySignature: response.razorpay_signature,
                  dbOrderId
                });

                if (confirm.data.status === "success") {
                  new bootstrap.Modal(document.getElementById("orderSuccessModal")).show();
                  confetti({ particleCount: 200, spread: 120, origin: { y: 0.6 } });
                } else {
                  Swal.fire("Error", confirm.data.message || "Order confirmation failed", "error");
                }
              } catch (error) {
                Swal.fire("Error", error.response?.data?.message || "Payment verification failed", "error");
              }
            },
            theme: { color: "#3399cc" }
          };
          new Razorpay(options).open();
        } catch (error) {
          Swal.fire("Error", error.response?.data?.message || "Could not start payment", "error");
        }
      }
    });

    // Add Address Form Submit
    const addAddressForm = document.getElementById('addAddressForm');
    addAddressForm.addEventListener('submit', function (e) {
      e.preventDefault();
      const formData = new FormData(addAddressForm);
      const data = Object.fromEntries(formData.entries());

      axios.post('/account/addAddress', data)
        .then(response => {
          Swal.fire({
            icon: 'success',
            title: 'Success',
            text: response.data.message,
            timer: 2000,
            showConfirmButton: false,
          }).then(() => location.reload());
        })
        .catch(error => {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.response?.data?.message || 'Something went wrong!',
          });
        });
    });
  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>