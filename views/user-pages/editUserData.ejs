<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Edit Profile | TechCart</title>

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <!-- CropperJS CSS -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet"/>
  <style>
    .modal-dialog { max-width: 90%; max-height: 90vh; }
    .modal-body { display: flex; justify-content: center; align-items: center; padding: 10px; }
    #cropImage { width: 50vw; max-height: 80vh; display: block; }
    .modal-content { max-width: 90%; max-height: 90%; }
    .profile-card { max-width: 220px; }
    .profile-card img { border-radius: 50%; width: 150px; height: 150px; object-fit: cover; margin: auto; }
  </style>
</head>
<body>
  <%- include('partials/header') %>
  <%- include('partials/accountSidebar') %>

  <div class="content-wrapper">
    <div class="container-fluid">
      <h3 class="mb-4">Edit Your Profile</h3>

      <form id="updateProfileForm" method="POST" enctype="multipart/form-data">
        <div class="row mb-3">
          <div class="col-md-6">
            <label for="firstName" class="form-label">First Name</label>
            <input type="text" class="form-control" id="firstName" name="firstName" value="<%= user.firstName || '' %>" required />
          </div>
          <div class="col-md-6">
            <label for="lastName" class="form-label">Last Name</label>
            <input type="text" class="form-control" id="lastName" name="lastName" value="<%= user.lastName || '' %>" required />
          </div>
        </div>

        <div class="mb-3">
          <label for="email" class="form-label">Email</label>
          <input type="email" class="form-control" id="email" name="email" value="<%= user.email || '' %>" required />
        </div>

        <div class="mb-3">
          <label for="phone" class="form-label">Phone</label>
          <input type="text" class="form-control" id="phone" name="phone" value="<%= user.phone || '' %>" required />
        </div>

        <div class="mb-3">
          <label for="profileImage" class="form-label">Profile Image</label>
          <input type="file" class="form-control" id="profileImage" accept="image/*" />

          <!-- Profile Card Preview -->
          <div class="card mt-3 shadow-sm profile-card">
            <div class="card-body text-center">
              <img id="profileImagePreview" src="<%= user.profileImage || '/images/default-profile.png' %>" alt="Profile Image" />
              <h6 class="mt-2">Profile Preview</h6>
            </div>
          </div>
        </div>

        <!-- Hidden input to send the cropped image blob -->
        <input type="hidden" id="croppedImageFile" name="croppedImageFile" />

        <button type="submit" class="btn btn-dark">Save Changes</button>
      </form>
    </div>
  </div>

  <!-- Cropper Modal -->
  <div class="modal fade" id="cropperModal" tabindex="-1" aria-labelledby="cropperModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Crop Your Image</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <img id="cropImage" src="" alt="Crop Image Preview" />
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" id="modalSaveBtn" class="btn btn-primary">Save</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

  <script>
    let cropper = null;
    const cropperModal = new bootstrap.Modal(document.getElementById('cropperModal'));
    const profileImageInput = document.getElementById('profileImage');
    const cropImageElement = document.getElementById('cropImage');
    const profileImagePreview = document.getElementById('profileImagePreview');
    const croppedImageFileInput = document.getElementById('croppedImageFile');
    const modalSaveBtn = document.getElementById('modalSaveBtn');
    const updateProfileForm = document.getElementById('updateProfileForm');

    profileImageInput.addEventListener('change', function () {
      const file = this.files[0];
      if (!file) return;
      const reader = new FileReader();
      reader.onload = function(e) {
        cropImageElement.src = e.target.result;
        cropperModal.show();
      }
      reader.readAsDataURL(file);
    });

    cropImageElement.addEventListener('load', function() {
      if (cropper) cropper.destroy();
      cropper = new Cropper(cropImageElement, {
        aspectRatio: 1,
        viewMode: 1,
        autoCropArea: 0.9,
        responsive: true,
        zoomable: true,
        minContainerWidth: 300,
        minContainerHeight: 300
      });
    });

    modalSaveBtn.addEventListener('click', function() {
      if (!cropper) {
        cropperModal.hide();
        return;
      }
      const canvas = cropper.getCroppedCanvas({
        width: 300,
        height: 300
      });

      canvas.toBlob(function(blob) {
        if (!blob) {
          console.error('Could not get blob from canvas');
          cropperModal.hide();
          return;
        }

        const fileName = 'cropped_' + Date.now() + '.jpg';
        const croppedFile = new File([blob], fileName, { type: 'image/jpeg' });

        const objectUrl = URL.createObjectURL(croppedFile);
        profileImagePreview.src = objectUrl;

        window._croppedProfileImageFile = croppedFile;

        cropperModal.hide();
      }, 'image/jpeg');
    });

    updateProfileForm.addEventListener('submit', function(e) {
      e.preventDefault();

      const formData = new FormData();
      formData.append('firstName', document.getElementById('firstName').value);
      formData.append('lastName', document.getElementById('lastName').value);
      formData.append('email', document.getElementById('email').value);
      formData.append('phone', document.getElementById('phone').value);

      if (window._croppedProfileImageFile) {
        formData.append('profileImage', window._croppedProfileImageFile, window._croppedProfileImageFile.name);
      }

      axios.post('/account/uploadImage', formData, {
        headers: { 'Content-Type': 'multipart/form-data' }
      })
      .then(response => {
        alert('Profile updated successfully!');
        window.location.href = '/profile';
      })
      .catch(error => {
        console.error('Profile update failed:', error);
        alert('Failed to update profile.');
      });
    });
  </script>
</body>
</html>
