<div class="d-flex">
  <!-- Sidebar -->
  <%- include('partials/sidebar') %>

  <!-- Main content -->
  <div class="flex-grow-1">
    <!-- Topbar -->
    <%- include('partials/topBar') %>

    <!-- Page content -->
    <div class="container-fluid p-4">
      <div class="d-flex justify-content-between align-items-center mb-4">
        <h3 class="fw-bold">Coupons Management</h3>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCouponModal">
          <i class="bi bi-plus-circle"></i> Add New Coupon
        </button>
      </div>

      <!-- Coupons Table -->
      <div class="table-responsive rounded shadow">
        <table class="table table-hover table-bordered align-middle text-center">
          <thead class="table-dark">
            <tr>
              <th>SL NO:</th>
              <th>Coupon Code</th>
              <th>Discount</th>
              <th>Valid From</th>
              <th>Valid Until</th>
              <th>Min Purchase</th>
              <th>Action</th>
            </tr>
          </thead>
          <tbody>
            <% if (!coupons || coupons.length === 0) { %>
              <tr>
                <td colspan="7" class="text-muted">No coupons available.</td>
              </tr>
            <% } else { %>
              <% coupons.forEach((coupon, index) => { %>
                <tr>
                  <td><%= index + 1 %></td>
                  <td><%= coupon.code %></td>
                  <td><%= coupon.discount %>%</td>
                  <td><%= new Date(coupon.validFrom).toLocaleDateString('en-IN') %></td>
                  <td><%= new Date(coupon.validUntil).toLocaleDateString('en-IN') %></td>
                  <td>₹<%= coupon.minimumPurchase %></td>
                  <td>
                    <button 
                      class="btn btn-sm btn-warning edit-btn" 
                      data-bs-toggle="modal"
                      data-bs-target="#editCouponModal"
                      data-id="<%= coupon._id %>"
                      data-code="<%= coupon.code %>"
                      data-discount="<%= coupon.discount %>"
                      data-validfrom="<%= new Date(coupon.validFrom).toISOString().slice(0,10) %>"
                      data-validuntil="<%= new Date(coupon.validUntil).toISOString().slice(0,10) %>"
                      data-minpurchase="<%= coupon.minimumPurchase %>">
                      <i class="bi bi-pencil-square"></i> Edit
                    </button>
                    <button 
                      class="btn btn-sm btn-danger delete-btn" 
                      data-id="<%= coupon._id %>" 
                      data-code="<%= coupon.code %>">
                      <i class="bi bi-trash"></i> Delete
                    </button>
                  </td>
                </tr>
              <% }) %>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<!-- Add Coupon Modal -->
<div class="modal fade" id="addCouponModal" tabindex="-1" aria-labelledby="addCouponModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <form id="addCouponForm" action="/admin/coupons/add" method="POST" class="modal-content">
      <div class="modal-header bg-dark text-white">
        <h5 class="modal-title" id="addCouponModalLabel">
          <i class="bi bi-plus-circle"></i> Add New Coupon
        </h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body bg-light">
        <div class="mb-3">
          <label for="couponCode" class="form-label">Coupon Code</label>
          <input type="text" id="couponCode" name="code" class="form-control" value="<%= generatedCode %>" readonly>
          <small class="text-muted">This code is automatically generated.</small>
        </div>
        <div class="mb-3">
          <label for="couponDiscount" class="form-label">Discount (%)</label>
          <input type="number" id="couponDiscount" name="discount" class="form-control" min="1" max="100" required>
        </div>
        <div class="mb-3">
          <label for="validFrom" class="form-label">Valid From</label>
          <input type="date" id="validFrom" name="validFrom" class="form-control" required>
        </div>
        <div class="mb-3">
          <label for="validUntil" class="form-label">Valid Until</label>
          <input type="date" id="validUntil" name="validUntil" class="form-control" required>
        </div>
        <div class="mb-3">
          <label for="minPurchase" class="form-label">Minimum Purchase (₹)</label>
          <input type="number" id="minPurchase" name="minPurchase" class="form-control" min="0" required>
        </div>
      </div>
      <div class="modal-footer bg-light">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-primary">Add Coupon</button>
      </div>
    </form>
  </div>
</div>

<!-- Edit Coupon Modal -->
<div class="modal fade" id="editCouponModal" tabindex="-1" aria-labelledby="editCouponModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <form id="editCouponForm" class="modal-content">
      <div class="modal-header bg-dark text-white">
        <h5 class="modal-title" id="editCouponModalLabel">
          <i class="bi bi-pencil-square"></i> Edit Coupon
        </h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body bg-light">
        <input type="hidden" id="editCouponId" name="id">
        <div class="mb-3">
          <label for="editCouponCode" class="form-label">Coupon Code</label>
          <input type="text" id="editCouponCode" name="code" class="form-control" readonly>
        </div>
        <div class="mb-3">
          <label for="editCouponDiscount" class="form-label">Discount (%)</label>
          <input type="number" id="editCouponDiscount" name="discount" class="form-control" min="1" max="100" required>
        </div>
        <div class="mb-3">
          <label for="editValidFrom" class="form-label">Valid From</label>
          <input type="date" id="editValidFrom" name="validFrom" class="form-control" required>
        </div>
        <div class="mb-3">
          <label for="editValidUntil" class="form-label">Valid Until</label>
          <input type="date" id="editValidUntil" name="validUntil" class="form-control" required>
        </div>
        <div class="mb-3">
          <label for="editMinPurchase" class="form-label">Minimum Purchase (₹)</label>
          <input type="number" id="editMinPurchase" name="minPurchase" class="form-control" min="0" required>
        </div>
      </div>
      <div class="modal-footer bg-light">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-success">Save Changes</button>
      </div>
    </form>
  </div>
</div>

<!-- Include SweetAlert2 & Axios -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<script>
  // Add Coupon
  document.getElementById('addCouponForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const data = Object.fromEntries(new FormData(e.target));

    try {
      const response = await axios.post('/admin/coupons/add', data);
      if (response.data.success) {
        Swal.fire({
          icon: 'success',
          title: 'Coupon Added!',
          text: response.data.message || 'New coupon has been added successfully.',
          timer: 1500,
          showConfirmButton: false
        }).then(() => window.location.reload());
      } else {
        Swal.fire({ icon: 'error', title: 'Error', text: response.data.message || 'Failed to add coupon.' });
      }
    } catch (error) {
      Swal.fire({ icon: 'error', title: 'Server Error', text: error.response?.data?.message || 'Something went wrong while adding the coupon.' });
    }
  });

  // Delete Coupon
  document.querySelectorAll('.delete-btn').forEach(button => {
    button.addEventListener('click', async () => {
      const couponId = button.dataset.id;
      const couponCode = button.dataset.code;

      const confirmed = await Swal.fire({
        title: `Delete Coupon "${couponCode}"?`,
        text: "This action cannot be undone!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Yes, delete it!'
      });

      if (confirmed.isConfirmed) {
        try {
          const res = await axios.post(`/admin/coupons/delete/${couponId}`);
          if (res.data.success) {
            Swal.fire({ icon: 'success', title: 'Deleted!', text: res.data.message || 'Coupon deleted successfully.', timer: 1200, showConfirmButton: false })
            .then(() => window.location.reload());
          } else {
            Swal.fire({ icon: 'error', title: 'Failed!', text: res.data.message || 'Could not delete coupon.' });
          }
        } catch (err) {
          Swal.fire({ icon: 'error', title: 'Error!', text: err.response?.data?.message || 'Server error while deleting coupon.' });
        }
      }
    });
  });

  // Populate Edit Coupon Modal
  const editModal = document.getElementById('editCouponModal');
  editModal.addEventListener('show.bs.modal', event => {
    const button = event.relatedTarget;
    document.getElementById('editCouponId').value = button.dataset.id;
    document.getElementById('editCouponCode').value = button.dataset.code;
    document.getElementById('editCouponDiscount').value = button.dataset.discount;
    document.getElementById('editValidFrom').value = button.dataset.validfrom;
    document.getElementById('editValidUntil').value = button.dataset.validuntil;
    document.getElementById('editMinPurchase').value = button.dataset.minpurchase;
  });

  // Edit Coupon Submission
  document.getElementById('editCouponForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const data = Object.fromEntries(new FormData(e.target));
    const couponId = data.id;

    try {
      const res = await axios.post(`/admin/coupons/edit/${couponId}`, data);
      if (res.data.success) {
        Swal.fire({
          icon: 'success',
          title: 'Updated!',
          text: res.data.message || 'Coupon updated successfully.',
          timer: 1500,
          showConfirmButton: false
        }).then(() => window.location.reload());
      } else {
        Swal.fire({ icon: 'error', title: 'Failed!', text: res.data.message || 'Could not update coupon.' });
      }
    } catch (err) {
      Swal.fire({ icon: 'error', title: 'Error!', text: err.response?.data?.message || 'Server error while updating coupon.' });
    }
  });
</script>
