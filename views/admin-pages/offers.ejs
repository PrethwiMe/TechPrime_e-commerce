<div class="d-flex">
  <!-- Sidebar -->
  <%- include('partials/sidebar') %>

  <!-- Main content -->
  <div class="flex-grow-1">
    <!-- Topbar -->
    <%- include('partials/topBar') %>

    <div class="container-fluid p-4">
      <div class="d-flex justify-content-between align-items-center mb-4 page-header" style=" color:rgb(0, 0, 0);">
        <h2 class="fw-bold"><i class="bi bi-tag-fill"></i> Offers Management</h2>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addOfferModal">
          <i class="bi bi-plus-circle"></i> Add New Offer..
        </button>
      </div>

      <!-- Offers Table -->
      <div class="table-responsive rounded shadow table-card">
        <table class="table table-hover table-bordered align-middle text-center">
          <thead class="table-dark">
            <tr>
              <th>Type</th>
              <th>Applies To</th>
              <th>Offer Value</th>
              <th>Start Date</th>
              <th>End Date</th>
              <th>Action</th>
            </tr>
          </thead>
          <tbody>
            <% if (!offer || offer.length === 0) { %>
              <tr>
                <td colspan="6">
                  <div class="empty-state py-4">
                    <div class="empty-state-icon">
                      <i class="bi bi-inbox"></i>
                    </div>
                    <p class="empty-state-text">No offers available yet. Create your first offer!</p>
                  </div>
                </td>
              </tr>
            <% } else { %>
              <% offer.forEach(item => { %>
              <tr>
                <td>
                  <span class="offer-type-badge offer-type-<%= item.appliesTo %>">
                    <%= item.appliesTo.charAt(0).toUpperCase() + item.appliesTo.slice(1) %>
                  </span>
                </td>
                <td>
                  <% if (item.appliesTo === 'product') { 
                    const product = products.find(p => p._id.toString() === item.productId?.toString()); %>
                    <%= product ? product.name : item.productId %>
                  <% } else { 
                    const category = categories.find(c => c._id.toString() === item.categoryId?.toString()); %>
                    <%= category ? category.name : item.categoryId %>
                  <% } %>
                </td>
                <td><span class="offer-value">₹<%= item.offerValue %></span></td>
                <td><span class="date-badge"><i class="bi bi-calendar-event"></i> <%= item.startDate %></span></td>
                <td><span class="date-badge"><i class="bi bi-calendar-event"></i> <%= item.endDate %></span></td>
                <td>
                  <button class="btn btn-sm btn-danger delete-btn" data-id="<%= item._id %>">
                    <i class="bi bi-trash-fill"></i> Delete
                  </button>
                </td>
              </tr>
              <% }) %>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<!-- Add Offer Modal -->
<div class="modal fade" id="addOfferModal" tabindex="-1" aria-labelledby="addOfferModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <form id="addOfferForm" class="modal-content">
      <div class="modal-header bg-dark text-white">
        <h5 class="modal-title"><i class="bi bi-plus-circle"></i> Add Offer</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body bg-light">
        <div class="mb-3">
          <label for="appliesTo" class="form-label">Applies To</label>
          <select id="appliesTo" class="form-select mb-2" onchange="toggleTarget('add')">
            <option value="product">Product</option>
            <option value="category">Category</option>
          </select>

          <select id="productDropdownAdd" class="form-select mb-2">
            <option value="">-- Select Product --</option>
            <% products.forEach(p => { %>
              <option value="<%= p._id %>"><%= p.name %></option>
            <% }) %>
          </select>

          <select id="categoryDropdownAdd" class="form-select mb-2" style="display:none;">
            <option value="">-- Select Category --</option>
            <% categories.forEach(c => { %>
              <option value="<%= c._id %>"><%= c.name %></option>
            <% }) %>
          </select>
        </div>
        <div class="mb-3">
          <label for="offerValueAdd" class="form-label">Offer Value (₹)</label>
          <input type="number" id="offerValueAdd" class="form-control">
        </div>
        <div class="mb-3">
          <label for="startDateAdd" class="form-label">Start Date</label>
          <input type="date" id="startDateAdd" class="form-control">
        </div>
        <div class="mb-3">
          <label for="endDateAdd" class="form-label">End Date</label>
          <input type="date" id="endDateAdd" class="form-control">
        </div>
      </div>
      <div class="modal-footer bg-light">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-primary">Save Offer</button>
      </div>
    </form>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  // Toggle dropdowns for Add
  function toggleTarget(mode) {
    const appliesTo = document.getElementById(mode === 'add' ? 'appliesTo' : '').value;
    if (mode === 'add') {
      document.getElementById('productDropdownAdd').style.display = appliesTo === 'product' ? 'block' : 'none';
      document.getElementById('categoryDropdownAdd').style.display = appliesTo === 'category' ? 'block' : 'none';
    }
  }

  // Submit Add Offer
  document.getElementById('addOfferForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const appliesTo = document.getElementById('appliesTo').value;
    const productId = document.getElementById('productDropdownAdd').value;
    const categoryId = document.getElementById('categoryDropdownAdd').value;
    const offerValue = document.getElementById('offerValueAdd').value;
    const startDate = document.getElementById('startDateAdd').value;
    const endDate = document.getElementById('endDateAdd').value;

    if (appliesTo === 'product' && !productId) return Swal.fire('Error', 'Select a product', 'error');
    if (appliesTo === 'category' && !categoryId) return Swal.fire('Error', 'Select a category', 'error');

    const payload = { appliesTo, offerValue, startDate, endDate };
    if (appliesTo === 'product') payload.productId = productId;
    if (appliesTo === 'category') payload.categoryId = categoryId;

    try {
      await axios.post('/admin/offers/add', payload);
      Swal.fire('Success', 'Offer added!', 'success').then(() => location.reload());
    } catch (err) {
      Swal.fire('Error', err.response?.data?.message || 'Failed to add offer', 'error');
    }
  });

  // Delete Offer
  document.querySelectorAll('.delete-btn').forEach(btn => {
    btn.addEventListener('click', () => {
      const id = btn.dataset.id;
      Swal.fire({
        title: 'Are you sure?',
        text: 'This offer will be disabled',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#1a1a2e',
        cancelButtonColor: '#6b7280',
        confirmButtonText: 'Yes, delete it!'
      }).then(async (result) => {
        if (result.isConfirmed) {
          try {
            await axios.put(`/admin/offers/${id}`, { Active: false });
            Swal.fire('Deleted!', 'Offer disabled', 'success').then(() => location.reload());
          } catch (err) {
            Swal.fire('Error', err.response?.data?.message || 'Failed to delete offer', 'error');
          }
        }
      });
    });
  });
</script>
