<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Offers - TechPrime Admin</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
  <link rel="stylesheet" href="/stylesheets/sidebar.css">
  <style>
    body {
      margin: 0;
      padding: 0;
    }

    .main-content {
      flex-grow: 1;
      min-height: 100vh;
      background-color: #f8f9fa;
    }

    .navbar {
      width: 100%;
      position: fixed;
      top: 0;
      z-index: 1000;
    }

    .content-wrapper {
      margin-top: 60px;
    }

    .table-responsive {
      background: white;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .table th,
    .table td {
      vertical-align: middle;
    }

    .offer-type-product {
      color: #0d6efd;
      font-weight: 500;
    }

    .offer-type-category {
      color: #198754;
      font-weight: 500;
    }

    .alert {
      margin-bottom: 20px;
    }

    .action-btn {
      margin-right: 5px;
    }

    .add-btn {
      margin-bottom: 20px;
    }
  </style>
</head>

<body>
  <div class="d-flex">
    <%- include('partials/sidebar') %>

    <div class="main-content">
      <%- include('partials/topBar') %>

      <div class="content-wrapper container-fluid">
        <% if (error) { %>
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
          <%= error %>
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
        <% } %>

        <% if (success) { %>
        <div class="alert alert-success alert-dismissible fade show" role="alert">
          <%= success %>
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
        <% } %>

        <div class="d-flex justify-content-between align-items-center mb-3">
          <h2 class="mb-0">Offers Management</h2>
          <button class="btn btn-success add-btn" onclick="addOffer()">
            <i class="bi bi-plus-circle"></i> Add Offer
          </button>
        </div>

        <div class="table-responsive">
          <table class="table table-hover">
            <thead class="table-dark">
              <tr>
                <th scope="col">Type</th>
                <th scope="col">Applies To</th>
                <th scope="col">Offer Value</th>
                <th scope="col">Start Date</th>
                <th scope="col">End Date</th>
                <th scope="col">Actions</th>
              </tr>
            </thead>
            <tbody>
              <% if (offer && offer.length > 0) { %>
              <% offer.forEach(function(item) { %>
              <tr>
                <td class="offer-type-<%= item.appliesTo %>">
                  <%= item.appliesTo.charAt(0).toUpperCase() + item.appliesTo.slice(1) %>
                </td>
                <td>
                  <% if (item.appliesTo === 'product') { %>
                  <% const product = products.find(p => p._id.toString() === item.productId?.toString()); %>
                  <%= product ? product.name : item.productId %>
                  <% } else { %>
                  <% const category = categories.find(c => c._id.toString() === item.categoryId?.toString()); %>
                  <%= category ? category.name : item.categoryId %>
                  <% } %>
                </td>
                <td>₹<%= item.offerValue %></td>
                <td><%= item.startDate %></td>
                <td><%= item.endDate %></td>
                <td>
                  <!-- Only Delete button -->
                  <button class="btn btn-sm btn-danger action-btn" onclick="deleteOffer('<%= item._id %>')">
                    <i class="bi bi-trash"></i> Delete
                  </button>
                </td>
              </tr>
              <% }) %>
              <% } else { %>
              <tr>
                <td colspan="6" class="text-center">No offers available</td>
              </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    // DELETE
    async function deleteOffer(offerId) {
      Swal.fire({
        title: 'Are you sure?',
        text: "This offer will be disabled.",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
      }).then(async (result) => {
        if (result.isConfirmed) {
          try {
            await axios.put(`/admin/offers/${offerId}`, { Active: false });
            Swal.fire({
              title: 'Deleted!',
              text: 'The offer has been deleted.',
              icon: 'success',
              timer: 1500,
              showConfirmButton: false
            }).then(() => {
              window.location.reload();
            });
          } catch (error) {
            Swal.fire({
              title: 'Error!',
              text: error.response?.data?.errors?.join(', ') || error.response?.data?.message || 'Failed to delete offer',
              icon: 'error',
              confirmButtonText: 'OK'
            });
          }
        }
      });
    }

    // ADD with dropdowns
    async function addOffer() {
      const { value: formValues } = await Swal.fire({
        title: 'Add New Offer',
        html: `
          <select id="appliesTo" class="form-select mb-2" onchange="toggleTargetDropdown(this.value)">
            <option value="product">Product</option>
            <option value="category">Category</option>
          </select>

          <select id="productDropdown" class="form-select mb-2">
            <option value="">-- Select Product --</option>
            <% products.forEach(p => { %>
              <option value="<%= p._id %>"><%= p.name %></option>
            <% }) %>
          </select>

          <select id="categoryDropdown" class="form-select mb-2" style="display:none;">
            <option value="">-- Select Category --</option>
            <% categories.forEach(c => { %>
              <option value="<%= c._id %>"><%= c.name %></option>
            <% }) %>
          </select>

          <input id="offerValue" type="number" class="form-control mb-2" placeholder="Offer Value (₹)">
          <input id="startDate" type="date" class="form-control mb-2">
          <input id="endDate" type="date" class="form-control mb-2">
        `,
        focusConfirm: false,
        showCancelButton: true,
        confirmButtonText: 'Save Offer',
        preConfirm: () => {
          const appliesTo = document.getElementById('appliesTo').value;
          const productId = document.getElementById('productDropdown').value;
          const categoryId = document.getElementById('categoryDropdown').value;
          const offerValue = document.getElementById('offerValue').value;
          const startDate = document.getElementById('startDate').value;
          const endDate = document.getElementById('endDate').value;

          if (appliesTo === 'product' && !productId) {
            Swal.showValidationMessage('Please select a product');
            return false;
          }
          if (appliesTo === 'category' && !categoryId) {
            Swal.showValidationMessage('Please select a category');
            return false;
          }

          let payload = { appliesTo};
          if (appliesTo === 'product') payload.productId = productId;
          if (appliesTo === 'category') payload.categoryId = categoryId;
          if (offerValue) payload.offerValue = offerValue;
          if (startDate) payload.startDate = startDate;
          if (endDate) payload.endDate = endDate;

          return payload;
        }
      });

      if (formValues) {
        try {
          await axios.post('/admin/offers/add', formValues);
          Swal.fire({
            icon: 'success',
            title: 'Offer Added!',
            showConfirmButton: false,
            timer: 1500
          }).then(() => window.location.reload());
        } catch (error) {
          Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: error.response?.data?.errors?.join(', ') || error.response?.data?.message || 'Failed to add offer'
          });
        }
      }
    }

    // toggle dropdowns
    function toggleTargetDropdown(value) {
      document.getElementById('productDropdown').style.display = value === 'product' ? 'block' : 'none';
      document.getElementById('categoryDropdown').style.display = value === 'category' ? 'block' : 'none';
    }
  </script>
</body>

</html>
